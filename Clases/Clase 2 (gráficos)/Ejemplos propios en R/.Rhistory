varianza_X
varianza_Y=esperanza_del_cuadrado_Y-esperanza_Y^2
varianza_Y
varianza_2=esperanza_del_cuadrado_2-esperanza_2^2
varianza_2
puntual_5=function(k){
if(k<=7){(k-1)/36}else{(12-(k-1))/36}
}
rango_5=(1:12)
puntuales_5=unlist(lapply(rango_5,puntual_5), recursive = FALSE)
puntuales_5
# unlist(lista_de_listas, recursive=FALSE) transforma
# la lista_de_listas en una sola lista
esperanza_5=sum(rango_5*puntuales_5)
esperanza_5
esperanza_del_cuadrado_5=sum(rango_5^2*puntuales_5)
esperanza_del_cuadrado_5
varianza_5=esperanza_del_cuadrado_5-esperanza_5^2
varianza_5
F_X=function(t){
if(t<0){0}else if(0<= t & t<12){t^2/144}else{1}
}
grilla=seq(-3,15,0.1)
plot(grilla,lapply(grilla, F_X),type='l',col='blue',
main='Distribución acumulada',
xlab='Rango', ylab='Probabilidad acumulada')
F_X(1)
F_X(1)/F_X(2)
F_X(1)/F_X(2)-F_X(1)
f_X=function(t){
if(t<0){0}else if(0<= t & t<12){t/72}else{0}
}
F_X(8)
choose(12,1)*F_X(1)+choose(12,2)*F_X(1)^2
f_U=function(x){dunif(x,0,15)}
F_U=function(x){punif(x,0,15)}
# una forma
integrate(f_U,5,15)
# otra forma
F_U(15)-F_U(5)
xf_U=function(x){x*f_U(x)}
integrate(xf_U,0,15)
0.8*15
f_N=function(x){dnorm(x,mean=75,sd=sqrt(25))}
F_N=function(x){pnorm(x,mean=75,sd=sqrt(25))}
par(mfrow=c(1,2))
grilla=seq(75-5*sqrt(25),75+5*sqrt(25),1)
plot(grilla,lapply(grilla,f_N),type='l',main='Densidad',
xlab='Rango', ylab='Densidad', col='blue')
plot(grilla,lapply(grilla,F_N),type='l',main='Distribución acumulada',
xlab='Rango', ylab='Proba acumulada', col='blue')
par(mfrow=c(1,1))
F_N(81)-F_N(70)
(F_N(81)-F_N(70))/(1-F_N(70))
F_N(70)^3+(F_N(81)-F_N(70))^3+(1-F_N(81))^3
c=qnorm(0.3,mean=75,sd=5)
F_N(c)
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R_ Fundamentos Estadisticos/Clases/Clase 2 (gráficos)/Ejemplos propios en R")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
tit=read.csv('titanic.csv', header=T)
attach(tit)
library(ggplot2)
freq.sex=table(sex)
class(survived)
survived=as.factor(survived)
barplot(freq.sex, col='green', density=8, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con mucha densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 4, col.main= "red",
cex.sub = 0.75, font.sub = 3, col.sub = "green",
col.lab ="darkblue"
)
# density define la cantidad de lineas diagonales azules.
# cex = character expansion ratio, cambia el tamaño de los textos.
barplot(freq.sex, col='green', density=1, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con poca densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 1, col.main= "red",
cex.sub = 0.75, font.sub = 1, col.sub = "green",
col.lab ="darkblue"
)
par(mfrow=c(1,2))
# par() permite mostrar varios graficos en la misma ventana, donde c(n,m)
# significa que queremos tener n filas y m columnas (para mostrar nxm graficos).
# En nuestro caso queremos mostrar 2 graficos uno al lado del otro,
# entonces 1 fila 2 columnas.
barplot(freq.sex, col='green', density=8,
main = "Mas densidad y otros colores", cex.main=0.5, col.axis="blue")
barplot(freq.sex, col='red', density=1,
main = "Menos densidad y otros colores", cex.main=0.5, col.axis="magenta")
par(mfrow=c(1,1))
# lo volvemos a dejar como estaba
pclass<-as.factor(pclass)
counts.clase<- table(pclass)
counts.clase
pie(counts.clase, col=c("blue","green","red"),
main="Grafico de Torta de Clases")
legend("bottomright",
c("1ra clase","2da clase", "3ra clase"),
fill=c("blue","green","red")
)
counts<- table(sex,pclass)
counts
barplot(counts,col= c( " blue " , "red "),
main="Sexo vs. Clase",
legend = rownames( counts ) )
counts_transposed<- table(pclass,sex)
counts_transposed
barplot(counts_transposed,col= c( " blue " , "red ", "green"),
main="Sexo vs. Clase",
legend = rownames( counts_transposed ) )
data("iris")
attach(iris)
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo.
par(mfrow=c(1,1))
pdf ("histogramas.pdf ")
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases
# o columnas del histograma.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo si es una lista de valores
# y especifica la cantidad de intervalos (# col del hist) si es un entero.
par(mfrow=c(1,1))
graphics.off()
media.es<-mean(Sepal.Length)
desvio.es<-sd(Sepal.Length)
# R entiende como desvio estandar (standard deviation) como la varianza matematica.
# Y como varianza entiende a la varianza matematica sin la raiz cuadrada.
# O sea: sq()=varianza_matematica, var()=varianza_matematica^2 --> var()=sq()^2.
grilla<-seq(range(Sepal.Length)[1],
range(Sepal.Length)[2],length=100)
# Armamos los puntos por los que va a pasar la curva densidad.
funn<-dnorm(grilla,media.es,desvio.es)
# Calculamos la densidad normal sobre grilla.
#Y graficamos ambas.
hist(Sepal.Length,nclass=15,freq=F,
main="Histograma de Densidad de Sepal.Length")
lines(grilla,funn,col="blue",lwd=2)
dat <- sample(100, 1000, replace=TRUE)
hist(dat, xaxt='n')
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))
boxplot(Sepal.Length~Species, xlab="especies",
main="longitud del sepalo")
plot(Sepal.Length,Sepal.Width,xlab =" longitud", ylab =" ancho",
main =" Plot de longitud vs. ancho",pch=16,type="n")
#solo graficamos la caja
points(Sepal.Length[Sepal.Length<=6],Sepal.Width[Sepal.Length<=6],
pch=20,col="magenta")
points(Sepal.Length[Sepal.Length>6],Sepal.Width[Sepal.Length>6],
pch=20,col="green")
par(bg="lightgray",mar=c(4,2,3.5, 4))
#c(bottom, left, top, right) defalut es c(5, 4, 4, 2) + 0.1.
plot(Sepal.Length,Sepal.Width,type="n",xlim=c(4,8),
ylim=c(1,6),xlab="", ylab="",xaxt="n", yaxt="n")
#solo graficamos la caja
points(Sepal.Length,Sepal.Width,pch=20,col="magenta")
#solo graficamos los puntos con el simbolo deseado
#Ahora nos encargamos de los ejes
axis(1,c(4,6,8),cex=2)
mtext("Sepal.Length",side=1,cex=0.8,line=3)
axis(4,cex=0.8,col="blue",labels=FALSE)
mtext(c(1,3,5),side=4,at=c(1,3,5),col="blue",line=0.3)
mtext("Sepal.Width",side=4,cex=0.8,line=2.5,col="blue")
#titulo
title("Diagrama Personalizado de Sepal.Length
vs. Sepal.Width",cex.main=0.8)
x<- 1:4 ; y<- 11:14
A<- cbind(x,y) # pego por columnas
A
B<-rbind(x,y) #pego por filas
B
SUB<-cbind( Sepal.Length, Sepal.Width, Petal.Length, Petal.Width )
pairs(SUB,col="magenta")
rm(list=ls())
detach(iris)
ggplot(data = freq.sex, aes(fl))+
geom_bar()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
tit=read.csv('titanic.csv', header=T)
attach(tit)
library(ggplot2)
freq.sex=table(sex)
class(survived)
survived=as.factor(survived)
ggplot(data = freq.sex, aes(fl))+
geom_bar()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
tit=read.csv('titanic.csv', header=T)
attach(tit)
library(ggplot2)
freq.sex=table(sex)
class(survived)
survived=as.factor(survived)
barplot(freq.sex, col='green', density=8, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con mucha densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 4, col.main= "red",
cex.sub = 0.75, font.sub = 3, col.sub = "green",
col.lab ="darkblue"
)
# density define la cantidad de lineas diagonales azules.
# cex = character expansion ratio, cambia el tamaño de los textos.
barplot(freq.sex, col='green', density=1, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con poca densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 1, col.main= "red",
cex.sub = 0.75, font.sub = 1, col.sub = "green",
col.lab ="darkblue"
)
par(mfrow=c(1,2))
# par() permite mostrar varios graficos en la misma ventana, donde c(n,m)
# significa que queremos tener n filas y m columnas (para mostrar nxm graficos).
# En nuestro caso queremos mostrar 2 graficos uno al lado del otro,
# entonces 1 fila 2 columnas.
barplot(freq.sex, col='green', density=8,
main = "Mas densidad y otros colores", cex.main=0.5, col.axis="blue")
barplot(freq.sex, col='red', density=1,
main = "Menos densidad y otros colores", cex.main=0.5, col.axis="magenta")
par(mfrow=c(1,1))
# lo volvemos a dejar como estaba
pclass<-as.factor(pclass)
counts.clase<- table(pclass)
counts.clase
pie(counts.clase, col=c("blue","green","red"),
main="Grafico de Torta de Clases")
legend("bottomright",
c("1ra clase","2da clase", "3ra clase"),
fill=c("blue","green","red")
)
counts<- table(sex,pclass)
counts
barplot(counts,col= c( " blue " , "red "),
main="Sexo vs. Clase",
legend = rownames( counts ) )
counts_transposed<- table(pclass,sex)
counts_transposed
barplot(counts_transposed,col= c( " blue " , "red ", "green"),
main="Sexo vs. Clase",
legend = rownames( counts_transposed ) )
data("iris")
attach(iris)
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo.
par(mfrow=c(1,1))
pdf ("histogramas.pdf ")
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases
# o columnas del histograma.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo si es una lista de valores
# y especifica la cantidad de intervalos (# col del hist) si es un entero.
par(mfrow=c(1,1))
graphics.off()
media.es<-mean(Sepal.Length)
desvio.es<-sd(Sepal.Length)
# R entiende como desvio estandar (standard deviation) como la varianza matematica.
# Y como varianza entiende a la varianza matematica sin la raiz cuadrada.
# O sea: sq()=varianza_matematica, var()=varianza_matematica^2 --> var()=sq()^2.
grilla<-seq(range(Sepal.Length)[1],
range(Sepal.Length)[2],length=100)
# Armamos los puntos por los que va a pasar la curva densidad.
funn<-dnorm(grilla,media.es,desvio.es)
# Calculamos la densidad normal sobre grilla.
#Y graficamos ambas.
hist(Sepal.Length,nclass=15,freq=F,
main="Histograma de Densidad de Sepal.Length")
lines(grilla,funn,col="blue",lwd=2)
dat <- sample(100, 1000, replace=TRUE)
hist(dat, xaxt='n')
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))
boxplot(Sepal.Length~Species, xlab="especies",
main="longitud del sepalo")
plot(Sepal.Length,Sepal.Width,xlab =" longitud", ylab =" ancho",
main =" Plot de longitud vs. ancho",pch=16,type="n")
#solo graficamos la caja
points(Sepal.Length[Sepal.Length<=6],Sepal.Width[Sepal.Length<=6],
pch=20,col="magenta")
points(Sepal.Length[Sepal.Length>6],Sepal.Width[Sepal.Length>6],
pch=20,col="green")
par(bg="lightgray",mar=c(4,2,3.5, 4))
#c(bottom, left, top, right) defalut es c(5, 4, 4, 2) + 0.1.
plot(Sepal.Length,Sepal.Width,type="n",xlim=c(4,8),
ylim=c(1,6),xlab="", ylab="",xaxt="n", yaxt="n")
#solo graficamos la caja
points(Sepal.Length,Sepal.Width,pch=20,col="magenta")
#solo graficamos los puntos con el simbolo deseado
#Ahora nos encargamos de los ejes
axis(1,c(4,6,8),cex=2)
mtext("Sepal.Length",side=1,cex=0.8,line=3)
axis(4,cex=0.8,col="blue",labels=FALSE)
mtext(c(1,3,5),side=4,at=c(1,3,5),col="blue",line=0.3)
mtext("Sepal.Width",side=4,cex=0.8,line=2.5,col="blue")
#titulo
title("Diagrama Personalizado de Sepal.Length
vs. Sepal.Width",cex.main=0.8)
x<- 1:4 ; y<- 11:14
A<- cbind(x,y) # pego por columnas
A
B<-rbind(x,y) #pego por filas
B
SUB<-cbind( Sepal.Length, Sepal.Width, Petal.Length, Petal.Width )
pairs(SUB,col="magenta")
rm(list=ls())
detach(iris)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
tit=read.csv('titanic.csv', header=T)
attach(tit)
library(ggplot2)
freq.sex=table(sex)
class(survived)
survived=as.factor(survived)
barplot(freq.sex, col='green', density=8, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con mucha densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 4, col.main= "red",
cex.sub = 0.75, font.sub = 3, col.sub = "green",
col.lab ="darkblue"
)
# density define la cantidad de lineas diagonales azules.
# cex = character expansion ratio, cambia el tamaño de los textos.
barplot(freq.sex, col='green', density=1, main = "", xlab="", ylab="",
col.axis="blue")
title(main = "Grafico de barras con poca densidad", sub = "Sub-title",
xlab = "X axis", ylab = "Y axis",
cex.main = 0.5,   font.main= 1, col.main= "red",
cex.sub = 0.75, font.sub = 1, col.sub = "green",
col.lab ="darkblue"
)
par(mfrow=c(1,2))
# par() permite mostrar varios graficos en la misma ventana, donde c(n,m)
# significa que queremos tener n filas y m columnas (para mostrar nxm graficos).
# En nuestro caso queremos mostrar 2 graficos uno al lado del otro,
# entonces 1 fila 2 columnas.
barplot(freq.sex, col='green', density=8,
main = "Mas densidad y otros colores", cex.main=0.5, col.axis="blue")
barplot(freq.sex, col='red', density=1,
main = "Menos densidad y otros colores", cex.main=0.5, col.axis="magenta")
par(mfrow=c(1,1))
# lo volvemos a dejar como estaba
pclass<-as.factor(pclass)
counts.clase<- table(pclass)
counts.clase
pie(counts.clase, col=c("blue","green","red"),
main="Grafico de Torta de Clases")
legend("bottomright",
c("1ra clase","2da clase", "3ra clase"),
fill=c("blue","green","red")
)
counts<- table(sex,pclass)
counts
barplot(counts,col= c( " blue " , "red "),
main="Sexo vs. Clase",
legend = rownames( counts ) )
counts_transposed<- table(pclass,sex)
counts_transposed
barplot(counts_transposed,col= c( " blue " , "red ", "green"),
main="Sexo vs. Clase",
legend = rownames( counts_transposed ) )
data("iris")
attach(iris)
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo.
par(mfrow=c(1,1))
pdf ("histogramas.pdf ")
par(mfrow=c(1,2))
hist(Sepal.Length,main="Histograma de frecuencias",col="2",nclass=15,
xlab="Longitud del sepalo")
# nclass especifica la cantidad de intervalos queremos (i.e. la cantidad de clases
# o columnas del histograma.)
# col='2' es col='red'. Cada color tiene un numero asociado.
hist(Sepal.Length,freq=F,main="Histograma de densidad",col="2",
breaks = c(3,4.5,5,6.3,6.8,8),xlab="longitud del sepalo")
# En el segundo caso estoy considerando la frecuencia relativa. Es decir, la altura del
# histograma no es el área de la frecuencia sino de la frecuencia relativa.
# freq: if TRUE, the histogram graphic is a representation of frequencies, the counts
# component of the result; if FALSE, probability densities, component density, are plotted.
# (ver ?hist).
# breaks especifica dónde van a ser los cortes del intervalo si es una lista de valores
# y especifica la cantidad de intervalos (# col del hist) si es un entero.
par(mfrow=c(1,1))
graphics.off()
media.es<-mean(Sepal.Length)
desvio.es<-sd(Sepal.Length)
# R entiende como desvio estandar (standard deviation) como la varianza matematica.
# Y como varianza entiende a la varianza matematica sin la raiz cuadrada.
# O sea: sq()=varianza_matematica, var()=varianza_matematica^2 --> var()=sq()^2.
grilla<-seq(range(Sepal.Length)[1],
range(Sepal.Length)[2],length=100)
# Armamos los puntos por los que va a pasar la curva densidad.
funn<-dnorm(grilla,media.es,desvio.es)
# Calculamos la densidad normal sobre grilla.
#Y graficamos ambas.
hist(Sepal.Length,nclass=15,freq=F,
main="Histograma de Densidad de Sepal.Length")
lines(grilla,funn,col="blue",lwd=2)
dat <- sample(100, 1000, replace=TRUE)
hist(dat, xaxt='n')
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))
boxplot(Sepal.Length~Species, xlab="especies",
main="longitud del sepalo")
plot(Sepal.Length,Sepal.Width,xlab =" longitud", ylab =" ancho",
main =" Plot de longitud vs. ancho",pch=16,type="n")
#solo graficamos la caja
points(Sepal.Length[Sepal.Length<=6],Sepal.Width[Sepal.Length<=6],
pch=20,col="magenta")
points(Sepal.Length[Sepal.Length>6],Sepal.Width[Sepal.Length>6],
pch=20,col="green")
par(bg="lightgray",mar=c(4,2,3.5, 4))
#c(bottom, left, top, right) defalut es c(5, 4, 4, 2) + 0.1.
plot(Sepal.Length,Sepal.Width,type="n",xlim=c(4,8),
ylim=c(1,6),xlab="", ylab="",xaxt="n", yaxt="n")
#solo graficamos la caja
points(Sepal.Length,Sepal.Width,pch=20,col="magenta")
#solo graficamos los puntos con el simbolo deseado
#Ahora nos encargamos de los ejes
axis(1,c(4,6,8),cex=2)
mtext("Sepal.Length",side=1,cex=0.8,line=3)
axis(4,cex=0.8,col="blue",labels=FALSE)
mtext(c(1,3,5),side=4,at=c(1,3,5),col="blue",line=0.3)
mtext("Sepal.Width",side=4,cex=0.8,line=2.5,col="blue")
#titulo
title("Diagrama Personalizado de Sepal.Length
vs. Sepal.Width",cex.main=0.8)
x<- 1:4 ; y<- 11:14
A<- cbind(x,y) # pego por columnas
A
B<-rbind(x,y) #pego por filas
B
SUB<-cbind( Sepal.Length, Sepal.Width, Petal.Length, Petal.Width )
pairs(SUB,col="magenta")
ggplot(data = freq.sex, aes(fl))+
geom_bar()
ggplot(data = sex, aes(fl))+
geom_bar()
sex
as.dataframe(sex)
as.data.frame(sex)
ggplot(data = as.data.frame(sex), aes(fl))+
geom_bar()
mpg
data(mpg)
force(mpg)
View(mpg)
ggplot(data = mpg, aes(x=displ, y=hwy))
+geom_point()
ggplot(data = mpg, aes(x=displ, y=hwy))+
geom_point()
ggplot(data = mpg, aes(x=displ, y=hwy))+
geom_line()
install.packages("ISwR")
