knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
var.gen=function(n,Nrep){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rnorm(Nrep,5,4))
}
data.frame(tabla)
}
data=var.gen(1,1000)
# como los experimentos son las filas suma y producto es
# sumar y promediar cada fila y por eso apply(-,1,-)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
hist(suma,freq=F,col='pink',main='Suma y promedio',
density=10,angle=45)
curve(dnorm(x,5,4),add=T,col='red')
hist(prom,freq=F,col='DeepSkyBlue1',main='Promedio',add=T,
density=10,angle=135)
curve(dnorm(x,5,4),add=T,col='blue')
ggplot()+
geom_histogram(aes(x=suma,weight=1/1000),alpha=0.7, fill="#33AADE", color="black") +
# alpha establece la opacidad de la capa
# fill (color de relleno) está dado es la rgb specification
# i.e. "#RRGGBB" donde RR, GG, BB está en hexadecimal
geom_density(aes(x=suma),alpha=0.2, fill="red")
# Además le agrego aes(weight=1/1000) para que en el eje y muestra
# freq relativ, i.e. divido cada valor de y por Nrep=1000
ggplot()+
geom_histogram(aes(x=suma,y = (..count..)/sum(..count..)),alpha=0.7, fill="#33AADE", color="black") +
geom_density(aes(x=suma),alpha=0.2, fill="red")
# otra forma es aclararle que quiero el eje y normalizado
ggplot()+
geom_histogram(aes(x=suma,y = (..count..)/sum(..count..)),alpha=0.7, fill="#33AADE", color="black") +
geom_density(aes(x=suma),alpha=0.2, fill="red")
data=var.gen(1,1000)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
ggplot() +
geom_histogram(aes(x=suma,y = ..density..), alpha=0.2, fill="pink",
col='red',position = 'identity') +
geom_density(aes(x=suma),alpha=0.2, col='red')+
geom_histogram(aes(x=prom,y = ..density..), alpha=0.2, fill="DeepSkyBlue1",
col='blue',position = 'identity')+
geom_density(aes(x=prom),alpha=0.2, col='blue')
data=var.gen(2,1000)
# como los experimentos son las filas suma y producto es
# sumar y promediar cada fila y por eso apply(-,1,-)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
hist(suma,freq=F,col='pink',main='Suma y promedio',
density=10,angle=45)
curve(dnorm(x,5,4),add=T,col='red')
hist(prom,freq=F,col='DeepSkyBlue1',main='Promedio',add=T,
density=10,angle=135)
curve(dnorm(x,5,4),add=T,col='blue')
data=var.gen(2,1000)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
ggplot() +
geom_histogram(aes(x=suma,y = ..density..), alpha=0.2, fill="pink",
col='red',position = 'identity') +
geom_density(aes(x=suma),alpha=0.2, col='red')+
geom_histogram(aes(x=prom,y = ..density..), alpha=0.2, fill="DeepSkyBlue1",
col='blue',position = 'identity')+
geom_density(aes(x=prom),alpha=0.2, col='blue')
enes=c(1,2,5,10,25)
Nrep=1000
sumyprod=function(n,Nrep,modo){
data=var.gen(n,Nrep)
if(modo==0){
data.frame('suma'=apply(data,1,sum))
}else if(modo==1){
data.frame('promedio'=apply(data,1,mean))
}else{ 'Ingrese modo=0 para obtener las sumas o modo=1 para obtener los promedios'}
}
# creo un data.frame con sum y prod de los enes casos
datos_suma=as.data.frame(lapply(enes,sumyprod,Nrep,modo=0))
datos_promedio=as.data.frame(lapply(enes,sumyprod,Nrep,modo=1))
# transformo los datos en un data.frame de 2 columnas donde
# col 1 = datos, col 2 = names
datos_suma=stack(datos_suma)[1]
colnames(datos_suma)='suma'
datos_promedio=stack(datos_promedio)[1]
colnames(datos_promedio)='promedio'
e<-vector()
# Ahora le agrego otra col a los datos con numeros en 1:length(enes)
# que van a representar los distintos experimentos para cada valor de ene.
for (i in 1:length(enes)){
e<-c(e,rep(i,Nrep))
}
datos_suma$ene=datos_promedio$ene=e
# Todo esto es para tener una categoría en la cual moverme para hacer el gif
# i.e. transition...(ene)
library(tidyr)
# tengo que cargar este paquete para poder usar %>%
datos_suma %>%
ggplot(aes(fill=as.factor(ene)))+
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
scale_fill_discrete(name="Nº Variables",
breaks=1:5,
labels=paste("n=", enes))
datos_promedio %>%
ggplot(aes(color=as.factor(ene)))+
geom_histogram(aes(x=promedio,y=stat(count)/Nrep),
binwidth=1 )+
scale_color_discrete(name="Nº Variables",
breaks=1:5,
labels=paste("n=", enes))
library(gganimate)
datos_suma$ene=as.integer(datos_suma$ene)
datos_suma$ene=as.factor(datos_suma$ene)
anim_sum <- datos_suma %>%
ggplot(aes(fill=ene))+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
# animate(anim_sum,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("suma.gif", anim_sum)
anim_prom <- datos_promedio %>%
ggplot()+
geom_histogram(aes(x=promedio,y=stat(count)/Nrep,color=as.factor(ene)),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)
# animate(anim_prom,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("prom.gif", anim_prom)
muestra=runif(1000,0,2)
ene=1000
promedios=c()
for(i in 1:ene){
promedios=c(promedios,mean(muestra[1:i]))
}
promedios=as.data.frame(promedios)
promedios$ene=1:1000
promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')
anim_unif=promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios, group = seq_along(ene)),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# para que se vea el trazo de lo que va dibujando en la transición usamos
# transition_reveal junto con aes(...,group = seq_along(ene))
# si queremos mostrar cada estado usamos simplemente transition_states.
# animate(anim_unif,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
set.seed(8888)
muestra_2=runif(1000,0,2)
promedios_2=c()
for(i in 1:ene){
promedios_2=c(promedios_2,mean(muestra_2[1:i]))
}
promedios_2=as.data.frame(promedios_2)
promedios_2$ene=1:1000
prom_total=as.data.frame(cbind('promedios'=promedios$promedios,'promedios_2'=promedios_2$promedios_2))
prom_total$ene=1:1000
prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')
anim_total= prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios,group = seq_along(ene)),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2,group = seq_along(ene)),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# animate(anim_total,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("unif prom.gif", anim_total)
anim_sum <- datos_suma %>%
ggplot(aes(fill=ene))+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
datos_suma$ene=as.integer(datos_suma$ene)
anim_sum <- datos_suma %>%
ggplot(aes(fill=ene))+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
var.gen=function(n,Nrep){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rnorm(Nrep,5,4))
}
data.frame(tabla)
}
data=var.gen(1,1000)
# como los experimentos son las filas suma y producto es
# sumar y promediar cada fila y por eso apply(-,1,-)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
hist(suma,freq=F,col='pink',main='Suma y promedio',
density=10,angle=45)
curve(dnorm(x,5,4),add=T,col='red')
hist(prom,freq=F,col='DeepSkyBlue1',main='Promedio',add=T,
density=10,angle=135)
curve(dnorm(x,5,4),add=T,col='blue')
ggplot()+
geom_histogram(aes(x=suma,weight=1/1000),alpha=0.7, fill="#33AADE", color="black") +
# alpha establece la opacidad de la capa
# fill (color de relleno) está dado es la rgb specification
# i.e. "#RRGGBB" donde RR, GG, BB está en hexadecimal
geom_density(aes(x=suma),alpha=0.2, fill="red")
# Además le agrego aes(weight=1/1000) para que en el eje y muestra
# freq relativ, i.e. divido cada valor de y por Nrep=1000
ggplot()+
geom_histogram(aes(x=suma,y = (..count..)/sum(..count..)),alpha=0.7, fill="#33AADE", color="black") +
geom_density(aes(x=suma),alpha=0.2, fill="red")
# otra forma es aclararle que quiero el eje y normalizado
ggplot()+
geom_histogram(aes(x=suma,y = (..count..)/sum(..count..)),alpha=0.7, fill="#33AADE", color="black") +
geom_density(aes(x=suma),alpha=0.2, fill="red")
data=var.gen(1,1000)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
ggplot() +
geom_histogram(aes(x=suma,y = ..density..), alpha=0.2, fill="pink",
col='red',position = 'identity') +
geom_density(aes(x=suma),alpha=0.2, col='red')+
geom_histogram(aes(x=prom,y = ..density..), alpha=0.2, fill="DeepSkyBlue1",
col='blue',position = 'identity')+
geom_density(aes(x=prom),alpha=0.2, col='blue')
data=var.gen(2,1000)
# como los experimentos son las filas suma y producto es
# sumar y promediar cada fila y por eso apply(-,1,-)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
hist(suma,freq=F,col='pink',main='Suma y promedio',
density=10,angle=45)
curve(dnorm(x,5,4),add=T,col='red')
hist(prom,freq=F,col='DeepSkyBlue1',main='Promedio',add=T,
density=10,angle=135)
curve(dnorm(x,5,4),add=T,col='blue')
data=var.gen(2,1000)
suma=apply(data,1,sum)
prom=apply(data,1,mean)
ggplot() +
geom_histogram(aes(x=suma,y = ..density..), alpha=0.2, fill="pink",
col='red',position = 'identity') +
geom_density(aes(x=suma),alpha=0.2, col='red')+
geom_histogram(aes(x=prom,y = ..density..), alpha=0.2, fill="DeepSkyBlue1",
col='blue',position = 'identity')+
geom_density(aes(x=prom),alpha=0.2, col='blue')
enes=c(1,2,5,10,25)
Nrep=1000
sumyprod=function(n,Nrep,modo){
data=var.gen(n,Nrep)
if(modo==0){
data.frame('suma'=apply(data,1,sum))
}else if(modo==1){
data.frame('promedio'=apply(data,1,mean))
}else{ 'Ingrese modo=0 para obtener las sumas o modo=1 para obtener los promedios'}
}
# creo un data.frame con sum y prod de los enes casos
datos_suma=as.data.frame(lapply(enes,sumyprod,Nrep,modo=0))
datos_promedio=as.data.frame(lapply(enes,sumyprod,Nrep,modo=1))
# transformo los datos en un data.frame de 2 columnas donde
# col 1 = datos, col 2 = names
datos_suma=stack(datos_suma)[1]
colnames(datos_suma)='suma'
datos_promedio=stack(datos_promedio)[1]
colnames(datos_promedio)='promedio'
e<-vector()
# Ahora le agrego otra col a los datos con numeros en 1:length(enes)
# que van a representar los distintos experimentos para cada valor de ene.
for (i in 1:length(enes)){
e<-c(e,rep(i,Nrep))
}
datos_suma$ene=datos_promedio$ene=e
# Todo esto es para tener una categoría en la cual moverme para hacer el gif
# i.e. transition...(ene)
library(tidyr)
# tengo que cargar este paquete para poder usar %>%
datos_suma %>%
ggplot(aes(fill=as.factor(ene)))+
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
scale_fill_discrete(name="Nº Variables",
breaks=1:5,
labels=paste("n=", enes))
datos_promedio %>%
ggplot(aes(color=as.factor(ene)))+
geom_histogram(aes(x=promedio,y=stat(count)/Nrep),
binwidth=1 )+
scale_color_discrete(name="Nº Variables",
breaks=1:5,
labels=paste("n=", enes))
library(gganimate)
datos_suma$ene=as.integer(datos_suma$ene)
datos_suma$ene=as.factor(datos_suma$ene)
anim_sum <- datos_suma %>%
ggplot(aes(fill=ene))+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
# animate(anim_sum,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("suma.gif", anim_sum)
anim_prom <- datos_promedio %>%
ggplot()+
geom_histogram(aes(x=promedio,y=stat(count)/Nrep,color=as.factor(ene)),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)
# animate(anim_prom,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("prom.gif", anim_prom)
muestra=runif(1000,0,2)
ene=1000
promedios=c()
for(i in 1:ene){
promedios=c(promedios,mean(muestra[1:i]))
}
promedios=as.data.frame(promedios)
promedios$ene=1:1000
promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')
anim_unif=promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios, group = seq_along(ene)),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# para que se vea el trazo de lo que va dibujando en la transición usamos
# transition_reveal junto con aes(...,group = seq_along(ene))
# si queremos mostrar cada estado usamos simplemente transition_states.
# animate(anim_unif,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
set.seed(8888)
muestra_2=runif(1000,0,2)
promedios_2=c()
for(i in 1:ene){
promedios_2=c(promedios_2,mean(muestra_2[1:i]))
}
promedios_2=as.data.frame(promedios_2)
promedios_2$ene=1:1000
prom_total=as.data.frame(cbind('promedios'=promedios$promedios,'promedios_2'=promedios_2$promedios_2))
prom_total$ene=1:1000
prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')
anim_total= prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios,group = seq_along(ene)),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2,group = seq_along(ene)),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# animate(anim_total,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("unif prom.gif", anim_total)
