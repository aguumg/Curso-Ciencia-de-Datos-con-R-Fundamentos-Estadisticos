labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
anim_sum <- datos_suma %>%
ggplot()+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep,colour=ene+5,group=1L),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
anim_sum <- datos_suma %>%
ggplot()+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep,colour=as.factor(ene)),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
iris
str(iris)
datos_suma$ene=as.factor(datos_suma$ene)
anim_sum <- datos_suma %>%
ggplot()+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep,colour=ene),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
datos_suma$ene=as.integer(datos_suma$ene)
anim_sum <- datos_suma %>%
ggplot()+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep,colour=ene),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
animate(anim_sum,
width = 400, height = 400,
nframes = 480, fps = 24)
anim_save("suma.gif", anim_sum)
anim_prom <- datos_promedio %>%
ggplot()+
geom_histogram(aes(x=promedio,y=stat(count)/Nrep,color=as.factor(ene)),
binwidth=1 )+
transition_states(ene, transition_length = 1, state_length = 1)
animate(anim_prom,
width = 400, height = 400,
nframes = 480, fps = 24)
anim_save("prom.gif", anim_prom)
knitr::opts_chunk$set(echo = TRUE)
variables_i_100=runif(100,-1.96,1.96)
variables_i_1000=runif(1000,-1.96,1.96)
variables_i_50000=runif(50000,-1.96,1.96)
rm(list=ls())
library(ggplot2)
variables_i_100=runif(100,-1.96,1.96)
variables_i_1000=runif(1000,-1.96,1.96)
variables_i_50000=runif(50000,-1.96,1.96)
aprox_i_100=1/100*(b-a)*sum(1/(2*pi)*exp(-variables_i_100^2/2))
a=-1.96
b=1.96
variables_i_100=runif(100,a,b)
variables_i_1000=runif(1000,a,b)
variables_i_50000=runif(50000,a,b)
aprox_i_100=1/100*(b-a)*sum(1/(2*pi)*exp(-variables_i_100^2/2))
aprox_i_1000=1/1000*(b-a)*sum(1/(2*pi)*exp(-variables_i_1000^2/2))
aprox_i_50000=1/50000*(b-a)*sum(1/(2*pi)*exp(-variables_i_50000^2/2))
aprox_int=function(a,b,n){
variables=runif(n,a,b)
1/n*(b-a)*sum(1/(2*pi)*exp(-variables^2/2))
}
aprox_i_100
aprox_int(-1.96,1.96,100)
aprox_int2=function(a,b,n){
variables=runif(n,a,b)
(b-a)*mean(1/(2*pi)*exp(-variables^2/2))
}
aprox_int(-1.96,1.96,100)
aprox_int(-1.96,1.96,1000)
aprox_int(-1.96,1.96,50000)
aprox_int2(-1.96,1.96,100)
aprox_int2(-1.96,1.96,1000)
aprox_int2(-1.96,1.96,50000)
indicadora=function(a,b,x){
ifelse(a<=x & x<=b,1,0)
}
aprox_prob=function(a,b,n){
variables=rnorm(n,0,1)
mean(indicadora(a,b,variables))
}
aprox_prob(-2,1,100)
aprox_prob2=function(a,b,n){
variables=rnorm(n,0,1)
1/n*sum(indicadora(a,b,variables))
}
aprox_prob2(-2,1,100)
a = -1.96
b = 1.96
punif(b,a,b)-punif(a,a,b)
pnorm(b,0,1)-punif(a,0,1)
indicadora(-1,1,3)
indicadora(-1,1,1)
indicadora(-1,1,0.5)
aprox_prob3=function(a,b,n){
variables=rnorm(n,0,1)
mean(a<=variables & variables <= b)
}
aprox_prob(a,b,100)
aprox_prob(a,b,1000)
aprox_prob(a,b,50000)
aprox_prob3(a,b,100)
aprox_prob3(a,b,1000)
aprox_prob3(a,b,50000)
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R: Fundamentos Estadisticos/Prácticas/Guia 17/Resolución Guia Clase")
knitr::opts_chunk$set(echo = TRUE)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
library(ggplot2)
library(tidyr)
library(ggplot2)
library(tidyr)
View(datos_1)
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/Nrep),
color='blue',fill='grey')
length(datos_1)
length(datos_1[,1])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
mean(datos_1)
mean(datos_1$gas_equipo_1)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
View(datos_2)
View(lamparas)
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
lamparas %>%
ggplot()+
geom_histogram(aes(x=lamparas,y=stat(count)/100),
color='blue',fill='grey')
?quantile
quantile(datos_1$gas_equipo_1,0.5)
quantile(datos_1$gas_equipo_1,0.9)
quantile(datos_1$gas_equipo_1,0.5)
mean(datos_1$gas_equipo_1-70>2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
library(tidyr)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
mean(datos_2$gas_equipo_2)
quantile(datos_2$gas_equipo_2,0.9)
mean(abs(datos_2$gas_equipo_2-70)>2)
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
lamparas %>%
ggplot()+
geom_histogram(aes(x=lamparas,y=stat(count)/100),
color='blue',fill='grey')
mean(lamparas$lamparas)
quantile(lamparas$lamparas,0.9)
mean(lamparas$lamparas<12)
quantile(datos_2$gas_equipo_2,0.1)
mean(datos_2$gas_equipo_2<72.402)
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1[1:5],y=stat(count)/100),
color='blue',fill='grey')
datos_1[1:5]
datos_1[1:5,]
as.data.frame(datos_1[1:5,])
as.data.frame('datos'=datos_1[1:5,])
data.frame('datos'=datos_1[1:5,])
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1$estado=1:100
View(datos_1)
n=5
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
View(datos_1)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
n=5
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
hist(datos_1)
hist(datos_1$gas_equipo_1)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey'
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
View(lamparas)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
data.frame('gas_equipo_2'=datos_2[1:n,]) %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')+
transition_states(n, transition_length = 1, state_length = 1)
data.frame('gas_equipo_2'=datos_2[1:n,]) %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey',bins=n)+
transition_states(n, transition_length = 1, state_length = 1)
data.frame('gas_equipo_2'=datos_2[1:n,]) %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')+
transition_states(n, transition_length = 1, state_length = 1)
n=100
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2=data.frame('gas_equipo_2'=datos_2[1:n,])
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_2$gas_equipo_2)
View(datos_1)
hist(datos_2$gas_equipo_2,freq = F)
datos=read.csv('datos_Practica7_gas2libreta64713n_1000.csv',header=T)
hist(datos$gas_equipo_2)
View(datos)
View(datos)
datos %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
datos=c(1.7,	2.48,	0.97,	2.22,	1.83)
estimacion_1=max(datos)
estimacion_2=2*mean(datos)
datos=c(1.7,	2.48,	0.97,	2.22,	1.83)
estimacion_1=max(datos)
estimacion_1
estimacion_2=2*mean(datos)
estimacion_2
mean(c(1.77,	1.34,	0.53,	2.28,	1.49))
2*mean(c(1.77,	1.34,	0.53,	2.28,	1.49))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
library(tidyr)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
n=5
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
n=30
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
n=100
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2=data.frame('gas_equipo_2'=datos_2[1:n,])
datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_2$gas_equipo_2,freq = F)
#   transition_states(n, transition_length = 1, state_length = 1)
# animate(anim_prom,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
######
mean(datos_2$gas_equipo_2)
######
quantile(datos_2$gas_equipo_2,0.9)
######
mean(abs(datos_2$gas_equipo_2-70)>2)
n=100
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
lamparas=data.frame('lamparas'=lamparas[1:n,])
lamparas %>%
ggplot()+
geom_histogram(aes(x=lamparas,y=stat(count)/100),
color='blue',fill='grey')
######
mean(lamparas$lamparas)
quantile(lamparas$lamparas,0.9)
######
mean(lamparas$lamparas<12)
datos=c(1.7,	2.48,	0.97,	2.22,	1.83)
estimacion_1=2*mean(datos)
estimacion_1
estimacion_2=max(datos)
estimacion_2
datos_3d=array(0,rep(100,3))
a=array(0,rep(3,3))
a[1,,]=rep(3,3)
a
View(datos_2)
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes(i),])
}
enes=c(5,30,100)
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes(i),])
}
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
}
datos
datos_4d
datos_3d
datos_3d[,,1]
datos_3d=array(0,c(max(enes),1,length(enes)))
datos_3d[,,1]
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
}
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos_3d[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
}
datos_3d[,1,1]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
View(datos_3d)
datos_3d=array(0,c(max(enes),1,length(enes)))
datos_3d[,1,1]
datos_3d[,,1]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
datos_3d[,,1]=data.frame('gas_equipo_2'=datos_2[1:enes[1],])
datos_3d[,,1]=data.frame('gas_equipo_2'=datos_2[1:enes[i],])
datos_3d[,,2]=data.frame('gas_equipo_2'=datos_2[1:enes[2],])
datos_3d=array(0,c(max(enes),1,length(enes)))
datos_3d[,,1]=datos_2[1:enes[i],]
datos_3d=array(0,c(max(enes),1,length(enes)))
for(i in 1:length(enes)){
aux_num=c(1,2,3)
datos_3d[,1,i]=datos_2[1:enes[i],]
}
datos_3d[,1,i]=datos_2[1:enes[i],]
datos_3d=array(0,c(max(enes),1,length(enes)))
datos_3d[,1,1]=datos_2[1:5,]
datos_3d
datos_2[1:5,]
datos_3d[,1,1]=datos_2[1:5,]
datos_3d
datos_3d[,5:100,1]=0
datos_3d[5:100,1,1]=0
datos_3d[1:5,1,1]=datos_2[1:5,]
datos_3d[1:30,1,2]=datos_2[1:30,]
datos_3d[,1,2]=datos_2[,]
datos_3d
datos_3d[1:30,1,2]=datos_2[1:30,]
datos_3d[31:100,1,2]=0
datos_3d[,1,3]=datos_2[,]
datos_3d
data.frame(datos_3d[,,1])
data.frame(datos_3d[,,c(1,2,3)])
data.frame(datos_3d[,,'ene'=c(1,2,3)])
anim <- ggplot(iris, aes(Petal.Width, Petal.Length, colour = Species)) +
geom_point() +
transition_filter(
transition_length = 2,
filter_length = 1,
Setosa = Species == 'setosa',
Long = Petal.Length > 4,
Wide = Petal.Width > 2
) +
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
anim <- ggplot(iris, aes(Petal.Width, Petal.Length, colour = Species)) +
geom_point() +
transition_filter(
transition_length = 2,
filter_length = 1,
Setosa = Species == 'setosa',
Long = Petal.Length > 4,
Wide = Petal.Width > 2
) +
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
library(devtools)
detach("package:devtools", unload = TRUE)
library(devtools)
install_github('thomasp85
/
gganimate')
install_github('thomasp85/gganimate')
install_github('R/transition-filter.R')
install_github('thomasp85/gganimate/blob/master/R/transition-filter.R')
anim <- ggplot(iris, aes(Petal.Width, Petal.Length, colour = Species)) +
geom_point() +
transition_filter(
transition_length = 2,
filter_length = 1,
Setosa = Species == 'setosa',
Long = Petal.Length > 4,
Wide = Petal.Width > 2
) +
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
