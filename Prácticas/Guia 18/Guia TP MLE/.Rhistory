datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],2),1],
'estimador_2'=aux[seq(2,dim(aux)[1],2),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
scale_colour_manual("",
breaks = c("est1", "est2"),
values = c("red", "blue")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
# simulo Nrep experimentos con n v.a. iid
# y pongo cada resultado en una fila distinta
var.gen.norm=function(n,Nrep,mu,sd){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rnorm(Nrep,mean=mu,sd))
}
data.frame(tabla)
}
###################################
est3=function(datos){
1-pnorm(1,mean(datos),1/0.2)
}
tabla_errores_exp=function(enes,Nrep){
error_est1=error_est2=c()
for(i in enes){
# genero datos
muestra=var.gen.norm(i,Nrep,mu=1/0.2,sd=1/0.2)
# calculo las estimaciones
estimacion_1=apply(muestra,1,est1)
estimacion_2=apply(muestra,1,est2)
# calculo errores y los guardo
error_est1=c(error_est1,ECME(estimacion_1))
error_est2=c(error_est2,ECME(estimacion_2))
}
errores=data.frame(rbind(error_est1,error_est2))
names(errores)=enes
errores
}
# genero los datos
datos_plot=tabla_errores_exp(enes,Nrep)
datos_plot
enes=c(150,200,500,1000)
Nrep=1000
# organizo los datos en columnas
aux=stack(datos_plot)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],2),1],
'estimador_2'=aux[seq(2,dim(aux)[1],2),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
scale_colour_manual("",
breaks = c("est1", "est2"),
values = c("red", "blue")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
View(datos_plot)
var.gen.norm=function(n,Nrep,mu,sd){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rnorm(Nrep,mean=mu,sd))
}
data.frame(tabla)
}
###################################
est3=function(datos){
1-pnorm(1,mean(datos),sd(datos))
}
###################################
tabla_errores_norm=function(enes,Nrep){
error_est1=error_est2=error_est3=c()
for(i in enes){
# genero datos
muestra=var.gen.norm(i,Nrep,mu=1/0.2,sd=1/0.2)
# calculo las estimaciones
estimacion_1=apply(muestra,1,est1)
estimacion_2=apply(muestra,1,est2)
estimacion_3=apply(muestra,1,est3)
# calculo errores y los guardo
error_est1=c(error_est1,ECME(estimacion_1))
error_est2=c(error_est2,ECME(estimacion_2))
error_est3=c(error_est3,ECME(estimacion_3))
}
errores=data.frame(rbind(error_est1,error_est2,error_est3))
names(errores)=enes
errores
}
enes=c(150,200,500,1000)
Nrep=1000
datos_plot=tabla_errores_norm(enes,Nrep)
datos_plot
aux=stack(datos_plot)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],3),1],
'estimador_2'=aux[seq(2,dim(aux)[1],3),1],
'estimador_3'=aux[seq(3,dim(aux)[1],3),1],
'ene'=enes))
datos_plot=tabla_errores_norm(enes,Nrep)
datos_plot
aux=stack(datos_plot)
datos_plot_2=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],3),1],
'estimador_2'=aux[seq(2,dim(aux)[1],3),1],
'estimador_3'=aux[seq(3,dim(aux)[1],3),1],
'ene'=enes))
View(datos_plot_2)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],3),1],
'estimador_2'=aux[seq(2,dim(aux)[1],3),1],
'estimador_3'=aux[seq(3,dim(aux)[1],3),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
geom_line(aes(x=ene,y=estimador_3,col='est3'))+
scale_colour_manual("",
breaks = c("est1", "est2", "est3"),
values = c("red", "blue", "green")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
library(tidyr)
library(gganimate)
est1=function(datos){
2*mean(datos)
}
est2=function(datos){
max(datos)
}
datos=c(1.17, 1.75, 0.28, 2.56, 2.36, 0.36, 1.82, 0.24, 1.17, 1.86)
est1(datos)
est2(datos)
datos=c(0.66, 0.07, 0.62, 0.65 ,1.33 ,0.40 ,1.17, 1.11, 2.01, 2.98)
est1(datos)
est2(datos)
# simulo Nrep experimentos con n v.a. iiid
# y pongo cada resultado en una fila distinta
var.gen=function(n,Nrep,theta){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,runif(Nrep,0,theta))
}
data.frame(tabla)
}
Nrep=1000
theta=3
enes=c(5,30,500)
estimacion_1=estimacion_2=matrix()
for(i in enes){
# simulo Nrep experimentos con n v.a. iiid
# y pongo cada resultado en una fila distinta
muestra=var.gen(i,Nrep,theta)
# le aplico est1 a cada fila
# i.e. estimo con el primer estimador los datos
# obtenidos en cada experimento (cada fila)
aux_1=data.frame(apply(muestra,1,est1))
names(aux_1)=paste('est1_',i)
estimacion_1=cbind(estimacion_1,aux_1)
# le aplico est2 a cada fila
aux_2=data.frame(apply(muestra,1,est2))
names(aux_2)=paste('est2_',i)
estimacion_2=cbind(estimacion_2,aux_2)
# estimaciones=cbind(estimaciones,estimacion_1,estimacion_2)
}
# le saco la columna 0 que tiene NAs
estimacion_1=estimacion_1[,2:dim(estimacion_1)[2]]
estimacion_2=estimacion_2[,2:dim(estimacion_2)[2]]
# verticalizamos los datos y les ponemos nombre
estimacion_1=stack(estimacion_1)[1]
names(estimacion_1)="estimacion_1"
estimacion_2=stack(estimacion_2)[1]
names(estimacion_2)="estimacion_2"
# le pongo una variable de filas para la transicion del gif
estimacion_1$filas=1:dim(estimacion_1)[1]
estimacion_2$filas=1:dim(estimacion_2)[1]
# nose como colorear usando filas, asi que agrego estados
estimacion_1$estado=as.factor(rep(c(5,30,500),rep(1000,3)))
estimacion_1 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=estimacion_1,y=stat(count)/1000))+
scale_fill_discrete(name="Nº Variables",
breaks=1:3,
labels=paste("n=", enes))
# Como puse los datos verticalmente tenemos
# n=5 corresponden las filas 1:1000
# n=30 corresponden las filas 1000:2000
# n=500 corresponden las filas 2000:3000
anim_1=estimacion_1 %>%
ggplot()+
geom_histogram(aes(x=estimacion_1,y=stat(count)/1000),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
1 <= filas & filas <= 1000 ,
1000 <= filas & filas <= 2000,
2000 <= filas
)+
ggtitle(
'Progresión est1',
subtitle = '{closest_expression}'
) +
enter_fade()+
exit_fade()
# exit_fly(y_loc = 0)
# animate(anim_1,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est1.gif", anim_1)
anim_1=estimacion_1 %>%
ggplot()+
geom_histogram(aes(x=estimacion_1,y=stat(count)/1000),
color='blue',fill='grey')+
transition_states(estado, transition_length = 1, state_length = 1)+
ggtitle(
'Progresión est1',
subtitle = 'n={closest_state}'
)
# animate(anim_1,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est1_2.gif", anim_1)
# nose como colorear usando filas, asi que agrego estados
estimacion_2$estado=as.factor(rep(c(5,30,500),rep(1000,3)))
estimacion_2 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=estimacion_2,y=stat(count)/1000))+
scale_fill_discrete(name="Nº Variables",
breaks=1:3,
labels=paste("n=", enes))
# Como puse los datos verticalmente tenemos
# n=5 corresponden las filas 1:1000
# n=30 corresponden las filas 1000:2000
# n=500 corresponden las filas 2000:3000
anim_2=estimacion_2 %>%
ggplot()+
geom_histogram(aes(x=estimacion_2,y=stat(count)/1000),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
1 <= filas & filas <= 1000 ,
1000 <= filas & filas <= 2000,
2000 <= filas
)+
ggtitle(
'Progresión est2',
subtitle = '{closest_expression}'
) +
enter_fade()+
exit_fade()
# exit_fly(y_loc = 0)
# animate(anim_2,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est2.gif", anim_2)
anim_2=estimacion_2 %>%
ggplot()+
geom_histogram(aes(x=estimacion_2,y=stat(count)/1000),
color='blue',fill='grey')+
transition_states(estado, transition_length = 1, state_length = 1)+
ggtitle(
'Progresión est2',
subtitle = 'n={closest_state}'
)
# animate(anim_1,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est2_2.gif", anim_2)
# con parámetros
ECME_param=function(n,Nrep,estimador){
theta=3
muestra=var.gen(n,Nrep,theta)
if(estimador==1){
estimacion=apply(muestra,1,est1)
mean((estimacion-theta)^2)
}else if(estimador==2){
estimacion=apply(muestra,1,est2)
mean((estimacion-theta)^2)
}else{'Ingrese un estimador adecuado (1 ó 2)'}
}
# sin parametros
ECME=function(datos){
theta=3
mean((datos-theta)^2)
}
# error_est1=error_est2=c()
# for(i in c(5,30,50,100,500)){
#   # genero datos
#   muestra=var.gen(i,1000,theta=3)
#   # calculo las estimaciones
#   estimacion_1=apply(muestra,1,est1)
#   estimacion_2=apply(muestra,1,est2)
#   # calculo errores y los guardo
#   error_est1=c(error_est1,ECME(estimacion_1))
#   error_est2=c(error_est2,ECME(estimacion_2))
# }
tabla_errores=function(enes,Nrep){
error_est1=error_est2=c()
for(i in enes){
# genero datos
muestra=var.gen(i,Nrep,theta=3)
# calculo las estimaciones
estimacion_1=apply(muestra,1,est1)
estimacion_2=apply(muestra,1,est2)
# calculo errores y los guardo
error_est1=c(error_est1,ECME(estimacion_1))
error_est2=c(error_est2,ECME(estimacion_2))
}
errores=data.frame(rbind(error_est1,error_est2))
names(errores)=enes
errores
}
# genero los datos
datos_plot=tabla_errores(enes,1000)
datos_plot
enes=c(5,30,50,100,500)
# organizo los datos en columnas
aux=stack(datos_plot)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],2),1],
'estimador_2'=aux[seq(2,dim(aux)[1],2),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
scale_colour_manual("",
breaks = c("est1", "est2"),
values = c("red", "blue")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
est1=function(datos){
mean(datos>1)
}
datos=c(12.23, 6.37, 6.10, 0.70 ,3.48 ,2.82, 9.55, 2.21, 0.72 ,9.09)
est1(datos)
est2=function(datos){
exp(-1/mean(datos))
}
datos=c(12.23, 6.37 ,6.10 ,0.70, 3.48, 2.82 ,9.55 ,2.21 ,0.72 ,9.09)
est2(datos)
exp(-0.2)
muestra=rexp(50,rate=0.2)
est1(muestra)
est2(muestra)
# simulo Nrep experimentos con n v.a. iid
# y pongo cada resultado en una fila distinta
var.gen.exp=function(n,Nrep,lambda){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rexp(Nrep,rate=lambda))
}
data.frame(tabla)
}
Nrep=1000
lambda=0.2
enes=c(50)
estimacion_1=estimacion_2=matrix()
for(i in enes){
# simulo Nrep experimentos con n v.a. iid E(lambda)
# y pongo cada resultado en una fila distinta
muestra=var.gen.exp(i,Nrep,lambda)
# le aplico est1 a cada fila
# i.e. estimo con el primer estimador los datos
# obtenidos en cada experimento (cada fila)
aux_1=data.frame(apply(muestra,1,est1))
names(aux_1)=paste('est1_',i)
estimacion_1=cbind(estimacion_1,aux_1)
# le aplico est2 a cada fila
aux_2=data.frame(apply(muestra,1,est2))
names(aux_2)=paste('est2_',i)
estimacion_2=cbind(estimacion_2,aux_2)
# estimaciones=cbind(estimaciones,estimacion_1,estimacion_2)
}
# le saco la columna 0 que tiene NAs
# y como tiene 1 sola fila lo transformo en data.frame
# sino lo toma como un vector
estimacion_1=data.frame('estimacion_1'=estimacion_1[,2:dim(estimacion_1)[2]])
estimacion_2=data.frame('estimacion_2'=estimacion_2[,2:dim(estimacion_2)[2]])
# # verticalizamos los datos y les ponemos nombre
# estimacion_1=stack(estimacion_1)[1]
# names(estimacion_1)="estimacion_1"
# estimacion_2=stack(estimacion_2)[1]
# names(estimacion_2)="estimacion_2"
# le pongo una variable de filas para la transicion del gif
estimacion_1$estado=as.factor(rep(enes,rep(Nrep,length(enes))))
estimacion_2$estado=as.factor(rep(enes,rep(Nrep,length(enes))))
estimacion_1 %>%
ggplot()+
geom_histogram(aes(x=estimacion_1,y=stat(count)/Nrep,fill='estimacion_1'),color='black')+
scale_fill_manual("",
breaks = c("estimacion_1"),
values = c("blue")) +
labs(title="est1")
estimacion_2 %>%
ggplot()+
geom_histogram(aes(x=estimacion_2,y=stat(count)/Nrep,fill='estimacion_2'),color='black')+
scale_fill_manual("",
breaks = c("estimacion_2"),
values = c("red")) +
labs(title="est2")
datos_plot=cbind('estimacion_1'=estimacion_1[,1],estimacion_2)
datos_plot %>%
ggplot()+
geom_histogram(aes(x=estimacion_1,y=stat(count)/Nrep,fill='estimacion_1'),color='black',alpha=0.5)+
geom_histogram(aes(x=estimacion_2,y=stat(count)/Nrep,fill='estimacion_2'),color='black',alpha=0.5)+
scale_fill_manual("",
breaks = c("estimacion_1", "estimacion_2"),
values = c("blue", "red")) +
labs(title="est1 vs est2")
ECME_exp=function(datos){
lambda=0.2
mean((datos-exp(-lambda))^2)
}
tabla_errores_exp=function(enes,Nrep){
error_est1=error_est2=c()
for(i in enes){
# genero datos
muestra=var.gen.exp(i,Nrep,lambda=0.2)
# calculo las estimaciones
estimacion_1=apply(muestra,1,est1)
estimacion_2=apply(muestra,1,est2)
# calculo errores y los guardo
error_est1=c(error_est1,ECME_exp(estimacion_1))
error_est2=c(error_est2,ECME_exp(estimacion_2))
}
errores=data.frame(rbind(error_est1,error_est2))
names(errores)=enes
errores
}
# genero los datos
enes=c(150,200,500,1000)
Nrep=1000
datos_plot=tabla_errores_exp(enes,Nrep)
datos_plot
# organizo los datos en columnas
aux=stack(datos_plot)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],2),1],
'estimador_2'=aux[seq(2,dim(aux)[1],2),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
scale_colour_manual("",
breaks = c("est1", "est2"),
values = c("red", "blue")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
ECME_norm=function(datos){
mu=1/0.2
sd=1/0.2
valor_a_estimar=1-pnorm(1,mu,sd)
mean((datos-valor_a_estimar)^2)
}
# simulo Nrep experimentos con n v.a. iid
# y pongo cada resultado en una fila distinta
var.gen.norm=function(n,Nrep,mu,sd){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,rnorm(Nrep,mean=mu,sd))
}
data.frame(tabla)
}
###################################
est3=function(datos){
1-pnorm(1,mean(datos),sd(datos))
}
###################################
tabla_errores_norm=function(enes,Nrep){
error_est1=error_est2=error_est3=c()
for(i in enes){
# genero datos
muestra=var.gen.norm(i,Nrep,mu=1/0.2,sd=1/0.2)
# calculo las estimaciones
estimacion_1=apply(muestra,1,est1)
estimacion_2=apply(muestra,1,est2)
estimacion_3=apply(muestra,1,est3)
# calculo errores y los guardo
error_est1=c(error_est1,ECME_norm(estimacion_1))
error_est2=c(error_est2,ECME_norm(estimacion_2))
error_est3=c(error_est3,ECME_norm(estimacion_3))
}
errores=data.frame(rbind(error_est1,error_est2,error_est3))
names(errores)=enes
errores
}
# genero los datos
enes=c(150,200,500,1000)
Nrep=1000
datos_plot=tabla_errores_norm(enes,Nrep)
datos_plot
# organizo los datos en columnas
aux=stack(datos_plot)
datos_plot=data.frame(cbind('estimador_1'=aux[seq(1,dim(aux)[1],3),1],
'estimador_2'=aux[seq(2,dim(aux)[1],3),1],
'estimador_3'=aux[seq(3,dim(aux)[1],3),1],
'ene'=enes))
ggplot(datos_plot)+
geom_line(aes(x=ene,y=estimador_1,col='est1'))+
geom_line(aes(x=ene,y=estimador_2,col='est2'))+
geom_line(aes(x=ene,y=estimador_3,col='est3'))+
scale_colour_manual("",
breaks = c("est1", "est2", "est3"),
values = c("red", "blue", "green")) +
xlab("ene") +
scale_y_continuous("error") +
labs(title="Errores")
