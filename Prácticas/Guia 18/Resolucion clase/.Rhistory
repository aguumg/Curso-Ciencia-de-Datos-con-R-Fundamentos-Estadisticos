#         nframes = 480, fps = 24)
# anim_save("prom.gif", anim_prom)
muestra=runif(1000,0,2)
ene=1000
promedios=c()
for(i in 1:ene){
promedios=c(promedios,mean(muestra[1:i]))
}
promedios=as.data.frame(promedios)
promedios$ene=1:1000
promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')
anim_unif=promedios %>%
ggplot()+
geom_point(aes(x=ene,y=promedios, group = seq_along(ene)),
colour ='blue')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# para que se vea el trazo de lo que va dibujando en la transición usamos
# transition_reveal junto con aes(...,group = seq_along(ene))
# si queremos mostrar cada estado usamos simplemente transition_states.
# animate(anim_unif,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
set.seed(8888)
muestra_2=runif(1000,0,2)
promedios_2=c()
for(i in 1:ene){
promedios_2=c(promedios_2,mean(muestra_2[1:i]))
}
promedios_2=as.data.frame(promedios_2)
promedios_2$ene=1:1000
prom_total=as.data.frame(cbind('promedios'=promedios$promedios,'promedios_2'=promedios_2$promedios_2))
prom_total$ene=1:1000
prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')
anim_total= prom_total %>%
ggplot()+
geom_point(aes(x=ene,y=promedios,group = seq_along(ene)),
colour ='blue')+
geom_point(aes(x=ene,y=promedios_2,group = seq_along(ene)),
colour ='red')+
geom_hline(aes(yintercept=1), col='black')+
transition_reveal(ene)
# animate(anim_total,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("unif prom.gif", anim_total)
anim_sum <- datos_suma %>%
filter(ene<3) %>%
ggplot(aes(color=ene))+
# Notar que obtenemos distintas cosas si ponemos
# fill=ene o fill=as.factor(ene)
# (o color=ene o color=as.factor(ene))
# si lo tomamos como factor muestra colores
# pero no dibuja la transición sino cada estado
geom_histogram(aes(x=suma,y=stat(count)/Nrep,group=suma),
binwidth=1 )+
# para que sea suave supuesatmente tengo que agregar
# aes(...,group=suma) pero r consume toda la ram
transition_states(ene, transition_length = 1, state_length = 1)+
labs(title = "n= {closest_state}")
# closest_state es la variable que va moviendo transition_states
# en nuestro caso mueve ene
# Con transition_states le decimos qué parámetro ir variando
# y con transition_length = 1, state_length = 1 le decimos que varíe 1
# animate(anim_sum,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("suma prueba transicion colores.gif", anim_sum)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
library(tidyr)
library(gganimate)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
n=5
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
n=30
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1=data.frame('gas_equipo_1'=datos_1[1:n,])
datos_1 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100),
color='blue',fill='grey')
hist(datos_1$gas_equipo_1)
mean(datos_1$gas_equipo_1)
quantile(datos_1$gas_equipo_1,0.9)
mean(abs(datos_1$gas_equipo_1-70)>2)
datos_1=read.csv('datos_gas1_n_100.csv', header=TRUE)
datos_1$filas=1:dim(datos_1)[1]
# Le agrego una variable estado a los datos
# para agregarle color al grafico.
datos_1$estado=rep(c(1,2,3),c(5,25,70))
anim=datos_1 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100))+
transition_filter(
transition_length = 3,
filter_length = 1,
filas <= 5 ,
filas <= 30,
filas <= 100
)+
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("datos 1 transicion color.gif", anim)
anim=datos_1 %>%
ggplot(aes(fill=as.factor(estado)))+
geom_histogram(aes(x=gas_equipo_1,y=stat(count)/100,group=estado))+
transition_states(estado, transition_length = 1, state_length = 1)+
enter_fade() +
exit_fly(y_loc = 0)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("datos 1 transicion color 2.gif", anim)
datos_2=read.csv('datos_gas2_n_100.csv', header=TRUE)
datos_2$filas=1:dim(datos_2)[1]
datos_2$estado=rep(c(1,2,3),c(5,25,70))
# # creamos una matriz de ( length(enes)^max(enes) )^3
# datos_3d=array(0,rep(max(enes),length(enes)))
# for(i in 1:length(enes)){
#   aux_num=c(1,2,3)
#   datos[,1,i]=data.frame('gas_equipo_2'=datos_2[1:enes(i),])
# }
anim=datos_2 %>%
ggplot()+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
filas <= 5 ,
filas <= 30,
filas <= 100
)+
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("datos 2 transicion.gif", anim)
mean(datos_2$gas_equipo_2)
quantile(datos_2$gas_equipo_2,0.9)
mean(abs(datos_2$gas_equipo_2-70)>2)
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
lamparas$filas=1:dim(lamparas)[1]
anim=lamparas %>%
ggplot()+
geom_histogram(aes(x=lamparas,y=stat(count)/100),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
filas <= 5 ,
filas <= 30,
filas <= 100
)+
ggtitle(
'Filter: {closest_filter}',
subtitle = '{closest_expression}'
) +
enter_fade() +
exit_fly(y_loc = 0)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("datos lamparas transicion.gif", anim)
mean(lamparas$lamparas)
quantile(lamparas$lamparas,0.9)
mean(lamparas$lamparas<12)
datos=c(1.7,	2.48,	0.97,	2.22,	1.83)
estimacion_1=function(datos){
2*mean(datos)
}
estimacion_1(datos)
estimacion_2=function(datos){
max(datos)
}
estimacion_2(datos)
anim=datos_2 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100),
color='blue',fill='grey')+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos 2 transicion 2.gif", anim)
View(datos_2)
anim=datos_2 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos 2 transicion 2.gif", anim)
anim=datos_2 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos 2 transicion color.gif", anim)
anim=datos_2 %>%
ggplot(aes(color=estado))+
geom_histogram(aes(x=gas_equipo_2,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos 2 transicion color.gif", anim)
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
lamparas$estado=rep(c(1,2,3),c(5,25,70))
anim=lamparas %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=lamparas,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos lamparas transicion.gif", anim)
lamparas=read.csv('datos_lamparas_n_100.csv', header=TRUE)
lamparas$estado=rep(c(1,2,3),c(5,25,70))
anim=lamparas %>%
ggplot(aes(color='black',fill=estado))+
geom_histogram(aes(x=lamparas,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos lamparas transicion.gif", anim)
anim=lamparas %>%
ggplot(aes(color=estado))+
geom_histogram(aes(x=lamparas,y=stat(count)/100))+
transition_states(estado, transition_length = 1, state_length = 1)
# animate(anim,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
anim_save("datos lamparas transicion.gif", anim)
View(lamparas)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(ggplot2)
library(tidyr)
library(gganimate)
est1=function(datos){
2*mean(datos)
}
est2=function(datos){
max(datos)
}
datos=c(1.17, 1.75, 0.28, 2.56, 2.36, 0.36, 1.82, 0.24, 1.17, 1.86)
est1(datos)
est2(datos)
datos=c(0.66, 0.07, 0.62, 0.65 ,1.33 ,0.40 ,1.17, 1.11, 2.01, 2.98)
est1(datos)
est2(datos)
var.gen=function(n,Nrep,theta){
tabla=c()
for(i in (1:n)){
tabla=cbind(tabla,runif(Nrep,0,theta))
}
data.frame(tabla)
}
Nrep=1000
theta=3
enes=c(5,30,500)
estimacion_1=estimacion_2=matrix()
for(i in enes){
muestra=var.gen(i,Nrep,theta)
aux_1=data.frame(apply(muestra,1,est1))
names(aux_1)=paste('est1_',i)
estimacion_1=cbind(estimacion_1,aux_1)
aux_2=data.frame(apply(muestra,1,est2))
names(aux_2)=paste('est2_',i)
estimacion_2=cbind(estimacion_2,aux_2)
# estimaciones=cbind(estimaciones,estimacion_1,estimacion_2)
}
# le saco la columna 0 que tiene NAs
estimacion_1=estimacion_1[,2:dim(estimacion_1)[2]]
estimacion_2=estimacion_2[,2:dim(estimacion_2)[2]]
# verticalizamos los datos y les ponemos nombre
estimacion_1=stack(estimacion_1)[1]
names(estimacion_1)="estimacion_1"
estimacion_2=stack(estimacion_2)[1]
names(estimacion_2)="estimacion_2"
# le pongo una variable de filas para la transicion del gif
estimacion_1$filas=1:dim(estimacion_1)[1]
estimacion_2$filas=1:dim(estimacion_2)[1]
# nose como colorear usando filas, asi que agrego estados
estimacion_1$estado=as.factor(rep(c(1,2,3),rep(1000,3)))
estimacion_1 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=estimacion_1,y=stat(count)/100))+
scale_fill_discrete(name="Nº Variables",
breaks=1:3,
labels=paste("n=", enes))
# Como puse los datos verticalmente tenemos
# n=5 corresponden las filas 1:1000
# n=30 corresponden las filas 1000:2000
# n=500 corresponden las filas 2000:3000
anim_1=estimacion_1 %>%
ggplot()+
geom_histogram(aes(x=estimacion_1,y=stat(count)/100),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
1 <= filas & filas <= 1000 ,
1000 <= filas & filas <= 2000,
2000 <= filas
)+
ggtitle(
'Progresión est1',
subtitle = '{closest_expression}'
) +
enter_fade()+
exit_fade()
# exit_fly(y_loc = 0)
# animate(anim_1,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est1.gif", anim_1)
# nose como colorear usando filas, asi que agrego estados
estimacion_2$estado=as.factor(rep(c(1,2,3),rep(1000,3)))
estimacion_2 %>%
ggplot(aes(fill=estado))+
geom_histogram(aes(x=estimacion_2,y=stat(count)/100))+
scale_fill_discrete(name="Nº Variables",
breaks=1:3,
labels=paste("n=", enes))
# Como puse los datos verticalmente tenemos
# n=5 corresponden las filas 1:1000
# n=30 corresponden las filas 1000:2000
# n=500 corresponden las filas 2000:3000
anim_2=estimacion_2 %>%
ggplot()+
geom_histogram(aes(x=estimacion_2,y=stat(count)/100),
color='blue',fill='grey')+
transition_filter(
transition_length = 3,
filter_length = 1,
1 <= filas & filas <= 1000 ,
1000 <= filas & filas <= 2000,
2000 <= filas
)+
ggtitle(
'Progresión est2',
subtitle = '{closest_expression}'
) +
enter_fade()+
exit_fade()
# exit_fly(y_loc = 0)
# animate(anim_2,
#         width = 400, height = 400,
#         nframes = 480, fps = 24)
# anim_save("est2.gif", anim_2)
ECME=function(n,Nrep,estimador){
theta=3
muestra=var.gen(n,Nrep,theta)
estimacion=apply(muestra,1,est1)
1/Nrep*sum(estimacion)
}
View(estimacion_1)
estimacion_1=estimacion_2=matrix()
for(i in enes){
muestra=var.gen(i,Nrep,theta)
aux_1=data.frame(apply(muestra,1,est1))
names(aux_1)=paste('est1_',i)
estimacion_1=cbind(estimacion_1,aux_1)
aux_2=data.frame(apply(muestra,1,est2))
names(aux_2)=paste('est2_',i)
estimacion_2=cbind(estimacion_2,aux_2)
# estimaciones=cbind(estimaciones,estimacion_1,estimacion_2)
}
View(muestra)
?apply
ECME=function(n,Nrep,estimador){
theta=3
muestra=var.gen(n,Nrep,theta)
if(estimador==1){
estimacion=apply(muestra,1,est1)
mean((estimacion-theta)^2)
}else if(estimador==2){
estimacion=apply(muestra,1,est2)
mean((estimacion-theta)^2)
}else{'Ingrese un estimador adecuado (1 ó 2)'}
}
knitr::opts_chunk$set(echo = TRUE)
read.table("http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat",
header=T, skip=1)
url('http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat')
read.table(url('http://astrostatistics.psu.edu/datasets/GRB_afterglow.dat'))
datos=read.table("GRB_afterglow.dat.csv",header=T)
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R_ Fundamentos Estadisticos/Prácticas/Guia 18/Resolucion clase")
datos=read.table("GRB_afterglow.dat.csv",header=T)
datos=read.csv("GRB_afterglow.dat.csv",header=T)
View(datos)
datos=read.table("GRB_afterglow.dat.csv",header=T, skip=1)
View(datos)
empirica=function(t){
mean(datos$f<t)
}
empirica(40)
ecdf(datos$f)(40)
plot(datos$f,empirica(datos$f))
plot(ecdf(datos$f))
plot(datos$f,empirica(datos$f))
length(datos$f)
length(empirica(datos$f))
plot(datos$f,apply(datos$f,1,empirica))
plot(datos$f,lapply(datos$f,empirica))
plot(datos$f,lapply(datos$f,empirica),type='l')
plot(datos$f,lapply(datos$f,empirica),type='l',smooth)
quantile(datos$f,0.5)
median(datos$f)
quantile(datos$f,0.5)
mean(datos$f)
var(datos$f)
sd(datos$f)
ggplot(datos)+
geom_histogram(aes(x=f,y=count(stats)/length(datos$f)))
library(ggplot2)
ggplot(datos)+
geom_histogram(aes(x=f,y=count(stats)/length(datos$f)))
ggplot(datos)+
geom_histogram(aes(x=f,y=stats(count)/length(datos$f)))
ggplot(datos)+
geom_histogram(aes(x=f,y=stat(count)/length(datos$f)))
ggplot(datos)+
geom_histogram(aes(x=f,y=stat(count)/length(datos$f),
col='blue',fill='grey'))
ggplot(datos)+
geom_histogram(aes(x=f,y=stat(count)/length(datos$f)),
col='blue',fill='grey')
?density
density(datos$f)
plot(density(datos$f))
ggplot(datos)+
geom_histogram(aes(x=f,y=stat(count)/length(datos$f)),
col='blue',fill='grey')+
geom_line(aes(x=density(datos$f)))
density(datos$f)
ggplot(density(datos$f))
ggplot(as.data.frame(density(datos$f)))
plot(density(datos$f))
ggplot(datos)+
geom_histogram(aes(x=f,y=stat(count)/length(datos$f)),
col='blue',fill='grey')+
geom_density(aes(x=f))
plot(density(datos$f))
hist(datos$f)
hist(datos$f,freq=F)
density(datos$f)
hist(datos$f,freq=F)+
density(datos$f)
hist(datos$f,freq=F)
density(datos$f)
hist(datos$f,freq=F)
plot(datos$f,lapply(datos$f,empirica),pch=20)
stat(count)/length(datos$f)
stat(datos$f)/length(datos$f)
plot(datos$f,stat(datos$f)/length(datos$f))
hist(stat(datos$f)/length(datos$f))
hist(stat(datos$f)/length(datos$f),freq=F)
hist(stat(datos$f)/length(datos$f),freq=F)
stat(datos$f)
hist(stat(datos$f)/length(datos$f),freq=F)
par(mfrow=c(1,2))
hist(datos$f,freq=F)
hist(stat(datos$f)/length(datos$f),freq=F)
par(mfrow=c(1,1))
