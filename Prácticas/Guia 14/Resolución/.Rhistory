sample(1,1
)
)
)
sample(1,1)
sample(1,1)
sample(1,1)
sample(1,1)
sample(1,1)
sample(1,1)
(1:5)
knitr::opts_chunk$set(echo = TRUE)
resultados=c()
m_lanzamientos=function(m){
for(i in (1:m))
resultados=c(resultados,sample(c(0,1),1))
}
frec_rel_m_lanz=function(m){
sum(m_lanzamientos(m)==1)/m
}
lanzamientos=m_lanzamientos(10)
lanzamientos
m_lanzamientos(10)
resultados=c()
m_lanzamientos=function(m){
for(i in (1:m)){
resultados=c(resultados,sample(c(0,1),1))
}
resultados
}
frec_rel_m_lanz=function(m){
sum(m_lanzamientos(m)==1)/m
}
lanzamientos=m_lanzamientos(10)
lanzamientos
frec_rel_experimento=function(resultados){
sum(resultados==1)/length(resultados)
}
frec_rel_experimento(lanzamientos)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
frec_rel_m_lanz(10)
source('~/.active-rstudio-document', echo=TRUE)
lanzamientos=m_lanzamientos(100)
frec_rel_experimento(lanzamientos)
?seq
seq(1,10,by=5)
emes=c(10,50,seq(from=100,to=1000,by=50))
plot(emes,lapply(emes,frec_rel_m_lanz),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='red', type='l', main='Lanzamiento de moneda')
emes=c(10,50,seq(from=100,to=1000,by=50))
plot(emes,lapply(emes,frec_rel_m_lanz),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
experimentosc()
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
experimentos
emes=c(10,50,seq(from=100,to=1000,by=50))
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
plot(emes,lapply(experimentos,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
emes=c(10,50,seq(from=100,to=1000,by=50))
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
plot(emes,lapply(experimentos,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
tira_resutados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes))
}
varios_experimentos=function(emes){
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
}
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes))
}
tira_resutados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes))
}
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
}
tira_resutados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
}
tira_resutados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
}
emes=c(10,50,seq(from=100,to=1000,by=50))
varios_experimentos=function(emes){
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
}
experimentos=varios_experimentos(emes)
plot(emes,lapply(experimentos,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
emes=c(10,50,seq(from=100,to=1000,by=50))
varios_experimentos=function(emes){
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
}
experimentos=varios_experimentos(emes)
plot(emes,lapply(experimentos,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
length(emes)
length(experimentos)
emes=c(10,50,seq(from=100,to=1000,by=50))
varios_experimentos=function(emes){
experimentos=c()
for(m in emes){
experimentos=c(experimentos,list(m_lanzamientos(m)))
}
experimentos
}
experimentos=varios_experimentos(emes)
plot(emes,lapply(experimentos,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
tira_resutados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
}
tira_resultados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
}
tira_resultados=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
tira_frecuencias=frec_rel_experimento(varios_experimentos(emes))
}
tira_resultados=tira_frecuencias=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
tira_frecuencias=frec_rel_experimento(varios_experimentos(emes))
}
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
tira_frecuencias=c(tira_frecuencias,list(frec_rel_experimento(tira_resultados[i])))
}
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
tira_frecuencias=c(tira_frecuencias,frec_rel_experimento(tira_resultados[i]))
}
tira_resultados
tira_resultados[1]
tira_resultados
tira_resultados[[1]]
tira_resultados=tira_frecuencias=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
# tira_frecuencias=c(tira_frecuencias,frec_rel_experimento(tira_resultados[i]))
}
tira_resutados
tira_resultados=tira_frecuencias=c()
for(i in (1:10)){
tira_resultados=c(tira_resultados,list(varios_experimentos(emes)))
# tira_frecuencias=c(tira_frecuencias,frec_rel_experimento(tira_resultados[i]))
}
experimento_1=varios_experimentos(emes)
plot(emes,lapply(experimento_1,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
tira_experimentos=c(list(experimento_1))
for(i in (2:10)){
tira_experimentos=c(tira_experimentos,list(varios_experimentos(emes)))
# points(emes,lapply(tira_experimentos[i],frec_rel_experimento),
#    col='i', type='l')
}
tira_experimentos
tira_experimentos[[1]]
experimento_1=varios_experimentos(emes)
plot(emes,lapply(experimento_1,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='blue', type='l', main='Lanzamiento de moneda')
tira_experimentos=c(list(experimento_1))
for(i in (2:10)){
tira_experimentos=c(tira_experimentos,list(varios_experimentos(emes)))
points(emes,lapply(tira_experimentos[[i]],frec_rel_experimento),
col='i', type='l')
}
library(colorspace)
install.packages(randomcoloR)
library(igraph)
library(randomcoloR)
install.packages(igraph)
devtools::install_git("https://github.com/ronammar/randomcoloR")
install.packages("randomcoloR")
library(randomcoloR)
library('randomcoloR'')
)
library('randomcoloR')
rand_color
?rand_color
rand_color(1)
color(1)
?colorspaces
colours()
colors()
palette()
palette()[1]
experimento_1=varios_experimentos(emes)
plot(emes,lapply(experimento_1,frec_rel_experimento),
xlab='Cantidad lanzamientos',
ylab='Frecuencias relativas',
col='black', type='l', main='Lanzamiento de moneda')
tira_experimentos=c(list(experimento_1))
for(i in (2:10)){
tira_experimentos=c(tira_experimentos,list(varios_experimentos(emes)))
points(emes,lapply(tira_experimentos[[i]],frec_rel_experimento),
col=palette()[i-2], type='l')
}
kerrich=read.csv('Kerrich.csv',header = T)
attach(kerrich)
names(kerrich)
View(kerrich)
'Genero'=c('Femenino','Masculino')
'Carrera'=c('Biología','Fisica','Computacion','Quimica','Matematica')
materia=data.frame('Genero','Carrera')
materia
View(materia)
Genero=c('Femenino','Masculino')
Carrera=c('Biología','Fisica','Computacion','Quimica','Matematica')
materia=data.frame('Genero'=Genero,'Carrera'=Carrera)
?table
datos_materia=matrix(c(0.15,0.06,0.12,0.05,0.10,0.10,0.12,0.15,0.10,0.05),col=4,byrow = TRUE)
datos_materia=matrix(c(0.15,0.06,0.12,0.05,0.10,0.10,0.12,0.15,0.10,0.05),ncol=4,byrow = TRUE)
rownames(datos_materia)=c('Femenino','Masculino')
datos_materia
datos_materia=matrix(c(0.15,0.06,0.12,0.05,0.10,0.10,0.12,0.15,0.10,0.05),ncol=5,byrow = TRUE)
rownames(datos_materia)=c('Femenino','Masculino')
colnames(datos_materia)=c('Biología','Fisica','Computacion','Quimica','Matematica')
materia=data.frame(datos_materia)
View(materia)
attach(materia)
names(materia)
Genero=='Femenino'
Genero
names(materia)
materia$Biología
materia$[Genero=='Femenino' & Biologia]
materia[Genero=='Femenino' & Biologia]
materia[Genero=='Femenino' & Biología]
View(kerrich)
mtcars
names(mtcars)
Biología
mtcars$mpg
titanic
Titanic
data=Titanic
read(Tatinic)
read(Titanic)
attach(Titanic)
Titanic
as.data.frame(Titanic)
Respondamos cada item.
\begin{enumerate}[label=(\alph*)]
\item Viendo la tabla tenemos que la probabilidad de que el estudiante sea de genero femenino y de biologia es del 15%.
\item Para este item queremos P(A) con $A=\{(0,c)|c\in\{1,\dots,5\}\}=\{(0,1),(0,2),\dots,(0,5)\}$, es decir,
\end{enumerate}
names(materia)
names(materia)[1]
names(materia)[1][1]
names(materia)[1]
materias
materia
materia[1,]
sum(materia[1,])
sum(materia[,1])
show(x=1)
print(x=1)
x
x=1
p_a=materia[1,1]
p_a
p_a=materia[1,1]
p.a=materia[1,1]
c=2
c
materia[,2]
sum(materia[2,])
Femenino
'Femenino'
materias
materia
materia[Femenino]
materia['Femenino']
materia['Femenino',]
p_a=materia['Femenino','Biología']
p_a
p_a=materia[1,1]
p_a
set.seed(123)
?set.seed
rnorm(10,mean=5,sd=2)
rnorm(10,mean=5,sd=2)
rnorm(10,mean=5,sd=2)
set.seed(123)
rnorm(10,mean=5,sd=2)
set.seed(123)
rnorm(10,mean=5,sd=2)
x,y=1
x;y=1
x
y
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R_ Fundamentos Estadisticos/Prácticas/Guia 14/Resolución")
knitr::opts_chunk$set(echo = TRUE)
rango=c(-3,-1,4,7)
puntuales=c(0.35,0.25,0.2,0.2)
esperanza=sum(rango*puntuales)
esperanza_al_cuadrado=sum(rango^2*puntuales)
varianza=esperanza_al_cuadrado-esperanza^2
rango_Y=lapply(rango_X,g)
g=function(x){
3*x+x^2
}
rango_Y=lapply(rango_X,g)
rango_X=c(-3,-1,4,7)
rango_Y=lapply(rango_X,g)
rango_Y
rango_X=c(-3,-1,4,7)
puntuales_X=c(0.35,0.25,0.2,0.2)
esperanza_X=sum(rango_X*puntuales_X)
esperanza_X
esperanza_del_cuadrado_X=sum(rango_X^2*puntuales_X)
esperanza_del_cuadrado_X
varianza_X=esperanza_del_cuadrado_X-esperanza_X^2
varianza_X
g=function(x){
3*x+x^2
}
rango_Y=lapply(rango_X,g)
esperanza_Y=sum(rango_Y*puntuales_X)
rango_Y[1]
puntuales_X[1]
rango_Y=g(rango_X)
rango_Y
puntuales_X
rango_Y=g(rango_X)
esperanza_Y=sum(rango_Y*puntuales_X)
esperanza_Y
esperanza_del_cuadrado_Y=sum(rango_Y^2*puntuales_X)
esperanza_del_cuadrado_Y
varianza_Y=esperanza_del_cuadrado_Y-esperanza_Y^2
varianza_Y
seq(1,7,1)
rep(2,4)
esperanza=sum((1:7)*rep(0.15,7))
esperanza
esperanza_del_cuadrado=sum((1:7)^2*rep(0.15,7))
esperanza_del_cuadrado
varianza=esperanza_del_cuadrado-esperanza^2
varianza
puntual_5=function(k){
if(k<=7){k-1}else{12-(k-1)}
}
rango_5=(1:12)
esperanza_5=sum(rango_5*puntual_5(rango_5))
esperanza_5
esperanza_del_cuadrado_5=sum(rango_5^2*puntual_5(rango_5))
esperanza_del_cuadrado_5
varianza_5=esperanza_del_cuadrado_5-esperanza_5^2
varianza_5
rango_5
lapply(rango_5,puntual_5)
c(lapply(rango_5,puntual_5))
unlist(lapply(rango_5,puntual_5), recursive = FALSE)
puntual_5=function(k){
if(k<=7){k-1}else{12-(k-1)}
}
rango_5=(1:12)
puntuales_5=unlist(lapply(rango_5,puntual_5), recursive = FALSE)
# unlist(lista_de_listas, recursive=FALSE) transforma
# la lista_de_listas en una sola lista
esperanza_5=sum(rango_5*puntuales_5)
esperanza_5
esperanza_del_cuadrado_5=sum(rango_5^2*puntuales_5)
esperanza_del_cuadrado_5
varianza_5=esperanza_del_cuadrado_5-esperanza_5^2
varianza_5
puntual_5=function(k){
if(k<=7){(k-1)/36}else{(12-(k-1))/36}
}
rango_5=(1:12)
puntuales_5=unlist(lapply(rango_5,puntual_5), recursive = FALSE)
# unlist(lista_de_listas, recursive=FALSE) transforma
# la lista_de_listas en una sola lista
esperanza_5=sum(rango_5*puntuales_5)
esperanza_5
esperanza_del_cuadrado_5=sum(rango_5^2*puntuales_5)
esperanza_del_cuadrado_5
varianza_5=esperanza_del_cuadrado_5-esperanza_5^2
varianza_5
sum(puntuales_5)
F_X=function(t){
if(t<0){0}else if(0<= t & t<12){t^2/144}else{1}
}
F_X(1)
F_X(0)
F_X(14)
F_X(12)
F_X(11)
deriv(F_X)
?deriv
D(F_X,x)
deriv(F_X,x)
deriv(F_X,'x')
deriv(x^2,'x')
deriv(x^2,'x')(1)
F_X
F_X(1)
deriv(F_X)
deriv(F_X,'x')
deriv(F_X,'x',function.arg = x)
deriv(F_X,'x',function.arg = 'x')
expression(F_X)
deriv(~F_X,"x")
deriv(~F_X,"x",func=TRUE)(1)
deriv(~F_X,"x",func=TRUE)(10)
deriv(~x^2,"x",func=TRUE)(10)
f_X=function(t){
if(t<0){0}else if(0<= t & t<12){t/72}else{0}
}
E_X=integrate(t*f_X(t),0,12)
integrate(x,1,2)
integrate(~x,1,2)
integrate(~t,1,2)
integrate(expressio(x),1,2)
integrate(expression(x),1,2)
integrate(f_X,1,2)
plot(puntuales_X,puntuales_X)
plot(rango_X,puntuales_X)
points(esperanza_X)
plot(rango_X,puntuales_X,col='b')
plot(rango_X,puntuales_X,col='blue')
points(esperanza_X, col='red')
plot(rango_X,puntuales_X,col='blue')
points(esperanza_X,0, col='red')
esperanza_X
plot(rango_X,puntuales_X,col='blue')
points(esperanza_X,0, col='red')
points(2,0, col='red')
plot(rango_X,puntuales_X,col='blue')
points(2,0, col='red')
plot(rango_X,puntuales_X,col='blue')
points((1:7), col='red')
plot(rango_X,puntuales_X,col='blue')
points(c(esperanza_X,0), col='red')
plot(rango_X,puntuales_X,type='n')
points(rango_X,puntuales_X, col='blue')
points(esperanza_X,0, col='red')
plot(rango_X,puntuales_X,col='blue')
points(0,0,col='red')
grilla=seq(0,15,0.1)
plot(grilla,lapply(grilla, F_X),type='l',col='blue')
grilla=seq(-3,15,0.1)
plot(grilla,lapply(grilla, F_X),type='l',col='blue')
integrate(deriv(expression(t^2/72,'t')),0,12)
integrate(D(expression(t^2/72),'t'),0,12)
integrate(D(expression(t^2/144),'t'),0,12)
f=expression(t^2/144)
f(1)
D(f,'t')
D(f,'t')(1)
integrate(D(f,'t'),0,12)
g=as.function(D(f,'t'))
g=as.function(D(f,'t'),'t')
g=as.function(D(f,'t'),t)
?as.function
