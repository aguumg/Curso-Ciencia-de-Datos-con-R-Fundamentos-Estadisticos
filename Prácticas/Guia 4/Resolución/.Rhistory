install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R: Fundamentos Estadisticos/Prácticas/Guia clase 4/Resolución")
setwd("~/Escritorio/1er Cuatri/Ciencia de Datos con R_ Fundamentos Estadisticos/Prácticas/Guia clase 4/Resolución")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
cara_ceca=function(){
sample(c(0,1),1)
}
n_lanzamientos=function(N_rep){
resultado=c()
for(i in (1:N_rep)){
resultado=c(resultado,cara_ceca())
}
resultado
}
muchas_repeticiones=n_lanzamientos(1000)
frecuencia=length(which(muchas_repeticiones==1))
frecuencia
frecuencia_relativa=frecuencia/1000
frecuencia_relativa
caras_obtenidas=c()
for (i in (1:10)){
x=n_lanzamientos(1000)
caras_obtenidas=c(caras_obtenidas,length(which(x==1)))
}
caras_obtenidas
perseverancia_cara=function(){
N_rep=1
while (cara_ceca()!= 1) {
N_rep=N_rep+1
}
N_rep
}
perseverancia=function(lado_moneda){
N_rep=1
while (cara_ceca()!= lado_moneda) {
N_rep=N_rep+1
}
N_rep
}
n_perseverancia_cara=function(n){
resultado=c()
for(i in (1:n)){
resultado=c(resultado,perseverancia_cara())
}
resultado
}
promedio=sum(n_perseverancia_cara(1000))/1000
promedio
exito_fracaso=function(p){
as.integer(runif(1) >= 1-p)
}
n_experimentos=function(N_rep,p){
for (i in (1:N_rep)){
resultado_bis=c()
resultado_bis=c(resultado_bis,exito_fracaso(p))
}
resultado_bis
}
muchas_repeticiones_bis=n_experimentos(1000,0.8)
frec_exito=length(which(muchas_repeticiones_bis==1))
frec_exito
frec_rel_exito=frec_exito/1000
frec_rel_exito
cuantos_exitos=function(N_rep,p){
x=n_experimentos(N_rep,p)
length(which(x==1))
}
perseverancia_exito=function(p){
N_rep=1
while(exito_fracaso(p)!=1){
N_rep=N_rep+1
}
N_rep
}
n_perseverancia_exito=function(n,p){
resultado=c()
for(i in (1:n)){
resultado=c(resultado,perseverancia_exito(p))
}
resultado
}
muchas_perseverancia_exito=n_perseverancia_exito(1000,0.8)
frec_muchas_perseverancia_exito=muchas_perseverancia_exito/1000
promedio_muchas_perseverancia_exito=sum(muchas_perseverancia_exito)/1000
grilla=seq(0.01,0.99,by=0.02)
resultado_grilla=c()
for (i in grilla){
resultado_grilla=c(resultado_grilla,list(n_perseverancia_exito(1000,i)))
}
resultado_grilla
promedio_1000_ejecuciones=function(p){
x=n_perseverancia_exito(1000,p)
sum(x)/1000
}
y=lapply(grilla,promedio_1000_ejecuciones)
plot(grilla,y,xlab='Probabilidades',
ylab='Perseverancia éxito')
inv_paramet_n_perseverancia=function(p,n){
n_perseverancia_exito(n,p)
}
y=sapply(grilla,inv_paramet_n_perseverancia,1000)
plot(grilla,y,xlab='Probabilidades',
ylab='Perseverancia éxito')
inv_paramet_n_perseverancia=function(p,n){
n_perseverancia_exito(n,p)
}
y_2=sapply(grilla,inv_paramet_n_perseverancia,1000)
plot(grilla,y_2,xlab='Probabilidades',
ylab='Perseverancia éxito')
inv_paramet_n_perseverancia=function(p,n){
n_perseverancia_exito(n,p)/1000
}
y_2=sapply(grilla,inv_paramet_n_perseverancia,1000)
plot(grilla,y_2,xlab='Probabilidades',
ylab='Perseverancia éxito')
perseverancia_exito=function(p){
N_rep=1
while(exito_fracaso(p)!=1){
N_rep=N_rep+1
}
N_rep
}
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.8)
perseverancia_exito(0.5)
perseverancia_exito(0.5)
perseverancia_exito(0.5)
perseverancia_exito(0.5)
perseverancia_exito(0.5)
l=c(0,0,0,1)
l[l==0]
sum(l==0)
l==0
length(muchas_perseverancia_exito==1)
unique(l)
l
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
sort(c(1,4,5,3))
unique(sort(c(1,4,3,3,3,3,2,5)))
lanzamiento.dado=function(){
sample(1:6,1)
}
lanzamientos.completar=function(){
resultado=c()
n=1
while(resultado!=c(1,2,3,4,5,6)){
resultado=unique(sort(c(resultado,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar()
lanzamientos.completar=function(){
resultado=c(lanzamiento.dado())
n=1
while(resultado!=c(1,2,3,4,5,6)){
resultado=unique(sort(c(resultado,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar=function(){
resultado=c(lanzamiento.dado())
n=1
while((length(resultado)!=6)|(resultado!=c(1,2,3,4,5,6))){
resultado=unique(sort(c(resultado,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
FALSE | TRUE
resultado
c(1,2,3,4)
x=c(1,2,3,4)
x!=c(1,2,3,4,5)
lanzamientos.completar=function(){
resultado=c(lanzamiento.dado())
n=1
while((length(resultado)!=6)){
if(resultado!=c(1,2,3,4,5,6)){
resultado=unique(sort(c(resultado,lanzamiento.dado())))
n=n+1}else{n}
}
n
}
lanzamientos.completar()
lanzamiento.dado=function(){
sample(1:6,1)
}
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamiento.dado()
lanzamientos.completar=function(){
resultado=c(lanzamiento.dado())
n=1
while((length(resultado)!=6)){
resultado=unique(sort(c(resultado,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamiento.dado=function(){
sample(1:6,1)
}
lanzamientos.completar=function(){
album=c(lanzamiento.dado())
n=1
while((length(album)!=6)){
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar=function(){
album=c(lanzamiento.dado())
n=1
while(length(album)!=6){
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
n
}
lanzamientos.completar=function(){
salidas_totales=c(lanzamiento.dado())
album=salidas_totales
n=1
while(length(album)!=6){
salidas_totales=c(salidas_totales,i)
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
return(n,sort(salidas_totales))
}
lanzamientos.completar()
lanzamiento.dado=function(){
sample(1:6,1)
}
lanzamientos.completar=function(){
salidas_totales=c(lanzamiento.dado())
album=salidas_totales
n=1
while(length(album)!=6){
salidas_totales=c(salidas_totales,i)
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
return(list('Intentos totales hasta completar: 'n,'Salidas totales: 'sort(salidas_totales))
}
lanzamientos.completar=function(){
salidas_totales=c(lanzamiento.dado())
album=salidas_totales
n=1
while(length(album)!=6){
salidas_totales=c(salidas_totales,i)
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
return(list('Intentos totales hasta completar: '=n,'Salidas totales: '=sort(salidas_totales))
}
lanzamientos.completar=function(){
salidas_totales=c(lanzamiento.dado())
album=salidas_totales
n=1
while(length(album)!=6){
salidas_totales=c(salidas_totales,i)
album=unique(sort(c(album,lanzamiento.dado())))
n=n+1
}
return(list('Intentos totales hasta completar: '=n,'Salidas totales: '=sort(salidas_totales)))
}
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar=function(){
salidas_totales=c(lanzamiento.dado())
album=salidas_totales
n=1
while(length(album)!=6){
salidas_totales=c(salidas_totales,i)
album=unique(sort(c(album,sample(1:6,1))))
n=n+1
}
return(list('Intentos totales hasta completar: '=n,'Salidas totales: '=sort(salidas_totales)))
}
c(1,2,3,4)==0
|(c(1,2,3,4)==0)
all(c(1,2,3,4)==0)
all(c(1,2,3,4,0)==0)
all(c(1,2,3,4)==0)
~(all(c(1,2,3,4)==0))
-(all(c(1,2,3,4)==0))
!(all(c(1,2,3,4)==0))
!(all(c(1,2,3,4)!=0))
exists(c(1,2,3,4),0)
?exists
which(c(1,2,3,4),0)
which(c(1,2,3,4)==0)
as.logical(which(c(1,2,3,4)==0))
c(1,2,3,4)==0
! c(1,2,3,4)==0
sum(c(TRUE,FALSE,TRUE))
c(0,0,0,0,0,0)==0
! c(1,2,3,4)==0
c(1,2,3,4)==0
sum(c(1,2,3,4)==0)
sum(c(1,2,0,4)==0)
lanzamientos.completar=function(){
album=c(0,0,0,0,0,0)
figus_compradas=0
contador=0
while(sum(album==0)!=0){
figu_nueva=sample(1:6,1)
album[figu_nueva]=album[figu_nueva]+1
contador=contador+1
}
return(list('Intentos totales hasta completar: '=contador,'Salidas totales: '=album))
}
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
lanzamientos.completar()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
exito_fracaso=function(p){
as.integer(runif(1) >= 1-p)
}
perseverancia_exito=function(p){
N_rep=1
while(exito_fracaso(p)!=1){
N_rep=N_rep+1
}
N_rep
}
n_perseverancia_exito=function(n,p){
resultado=c()
for(i in (1:n)){
resultado=c(resultado,perseverancia_exito(p))
}
resultado
}
muchas_perseverancia_exito=n_perseverancia_exito(1000,0.8)
aux=c()
for(i in muchas_perseverancia_exito){
aux=c(aux,sum(muchas_perseverancia_exito==i)/1000)
}
frec_muchas_perseverancia_exito=unique(aux)
promedio_muchas_perseverancia_exito=sum(muchas_perseverancia_exito)/1000
grilla=seq(0.01,0.99,by=0.02)
resultado_grilla=c()
for (i in grilla){
resultado_grilla=c(resultado_grilla,list(n_perseverancia_exito(1000,i)))
}
resultado_grilla
promedio_1000_ejecuciones=function(p){
x=n_perseverancia_exito(1000,p)
sum(x)/1000
}
y=lapply(grilla,promedio_1000_ejecuciones)
plot(grilla,y,xlab='Probabilidades',
ylab='Perseverancia éxito')
